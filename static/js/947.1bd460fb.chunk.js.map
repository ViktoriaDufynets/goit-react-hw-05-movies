{"version":3,"file":"static/js/947.1bd460fb.chunk.js","mappings":"6OAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,mFACgB,mCACNC,EAFV,6CAEsDD,EAFtD,YAGUE,EAHV,mBACgB,mCADhB,4BAK2BC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IAL1C,cAKUE,EALV,gBAMuBA,EAASC,OANhC,cAMUC,EANV,yBAQWA,GARX,mEAWE,M,SAXuB,GAAVP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECCf,EAAyB,uBAAzB,EAA6D,2B,SCmC3D,MAjCF,YAAiC,IAAXQ,EAAU,EAAVA,OAElB,OACI,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACI,2BACF,0BACE,gBAAKC,OAAO,QACVC,IACEF,EAAK,0CAAsCA,GAAU,iBAEvDG,IAAKJ,OAGT,cAAIJ,UAAWC,EAAf,SAAgCG,MATrBD,EAYd,KAGR,ECAH,MAnBA,WACE,IAAQX,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAA4BkB,EAAAA,EAAAA,UAAS,MAArC,eAAOX,EAAP,KAAeY,EAAf,KAcA,OAXAC,EAAAA,EAAAA,YAAU,WACRrB,EAAUC,GAASqB,MAAK,YAAe,IAC/BC,EAD8B,EAAXC,KACAb,KAAI,kBAAiC,CAC1DC,GADyB,EAAGA,GAE5BC,KAFyB,EAAOA,KAGhCC,MAHyB,EAAaW,aAAb,IAK7BL,EAAUG,EACX,IAAEG,OAAM,SAAAC,GAAWC,QAAQC,IAAI,UAAY,GAC7C,GAAE,CAAC5B,IAEGO,IAAU,SAAC,EAAD,CAAYA,OAAQA,GACtC,C","sources":["API/movieCast.js","webpack://react-homework-template/./src/components/ActorsList/Actors.module.css?d341","components/ActorsList/ActorsList.jsx","pages/Cast.js"],"sourcesContent":["async function movieCast(movieId) {\n    const key = '29ab84dcc4d690c01746cf216b8a2af7';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n    const filter = `?api_key=${key}&language=en-US`;\n  \n    const response = await fetch(`${url}${filter}`);\n    const data = await response.json();\n  \n    return data;\n  }\n  \n  export default movieCast;","// extracted by mini-css-extract-plugin\nexport default {\"Actors\":\"Actors_Actors__kiEk0\",\"Actorsname\":\"Actors_Actorsname__ES-qj\"};","import css from './Actors.module.css';\nimport propTypes from 'prop-types';\n\nfunction ActorsList({ actors }) {\n\n    return (\n        <ul className={css.Actors}>\n          {actors.map(({ id, name, photo }) => {\n            return (\n                <li key={id}>\n              <div>\n                <img height='300px'\n                  src={\n                    photo ? `https://image.tmdb.org/t/p/w500/${photo}` : 'No actor found'\n                  }\n                  alt={name}\n                />\n              </div>\n              <p  className={css.Actorsname}>{name}</p>\n            </li>\n            );\n          })}\n        </ul>\n    );\n  }\n  \n  ActorsList.propTypes = {\n    actors: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n        photo: propTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  export default ActorsList;","import { useState, useEffect } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport movieCast from \"API/movieCast\";\nimport ActorsList from \"components/ActorsList/ActorsList\";\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n//  const [error] = useState(null);\n\n  useEffect(() => {\n    movieCast(movieId).then(({ cast }) => {\n      const actorsArray = cast.map(({ id, name, profile_path }) => ({\n          id,\n          name,\n          photo: profile_path,\n    }));\n      setActors(actorsArray);\n    }).catch(error => {(console.log('No cast'))});\n  }, [movieId]);\n\n  return actors && <ActorsList actors={actors} />;\n}\n\nexport default Cast;"],"names":["movieCast","movieId","url","filter","fetch","response","json","data","actors","className","css","map","id","name","photo","height","src","alt","useParams","useState","setActors","useEffect","then","actorsArray","cast","profile_path","catch","error","console","log"],"sourceRoot":""}